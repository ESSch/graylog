version: '3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:9200/_cat/health?h=status | grep 'green'"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - "9200:9200"
    deploy:
      restart_policy:
        condition: on-failure

  # docker run --log-driver gelf --log-opt gelf-address='udp://127.0.0.1:12201' alpine echo 'hello world'
  # curl http://localhost:9001
  graylog:
    image: graylog/graylog:3.0
    environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://${GRAYLOG_HOST}:9001/
#    volumes:
#      - ./graylog_data/:/usr/share/graylog/data/
#      - ./graylog_log/:/var/log/ # tail -f ./graylog_log/haproxy.log
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9001:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.7.2
#    volumes:
#      - ./kibana_data/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
